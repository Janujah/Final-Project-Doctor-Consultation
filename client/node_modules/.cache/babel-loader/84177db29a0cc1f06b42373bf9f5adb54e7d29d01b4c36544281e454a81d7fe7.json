{"ast":null,"code":"var _jsxFileName = \"/home/janujah/F-Pro_Doc/client/src/Admin/Doctoradmin.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Navbar from '../Components/nav-admin';\n\n// function UserTable() {\n//     const [users, setUsers] = useState([]);\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     const fetchUsers = () => {\n//         fetch('http://localhost:3002/Doctors/view')\n//             .then(response => response.json())\n//             .then(data => {\n//                 setUsers(data);\n//             })\n//             .catch(error => {\n//                 console.error('Failed to fetch users:', error);\n//                 alert('Failed to load users.');\n//             });\n//     };\n\n//     const verifyUser = (id) => {\n//         if (!id) {\n//             alert('User ID is missing.');\n//             return;\n//         }\n\n//         fetch(`http://localhost:3002/Doctors/verify/${id}`, {\n//             method: 'PATCH',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//         })\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error(`HTTP error! status: ${response.status}`);\n//             }\n//             return response.json();\n//         })\n//         .then(() => {\n//             alert('User verified successfully');\n//             fetchUsers();  // Refresh the users list\n//         })\n//         .catch(error => {\n//             console.error('Error verifying user:', error);\n//             alert(`Failed to verify the user: ${error.message}`);\n//         });\n//     };\n\n//     const deleteUser = (id) => {\n//         if (!id) {\n//             alert('User ID is missing.');\n//             return;\n//         }\n\n//         if (window.confirm(`Are you sure you want to delete this user?`)) {\n//             fetch(`http://localhost:3002/Doctors/delete/${id}`, {\n//                 method: 'DELETE',\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 alert(data.message || \"User deleted successfully\");\n//                 fetchUsers();  // Optionally update all data or modify locally\n//             })\n//             .catch(error => {\n//                 console.error('Error:', error);\n//                 alert('Failed to delete the user.');\n//             });\n//         }\n//     };\n\n//     return (\n//         <div className=\"user-management-container\">\n//             <Navbar />\n//             <div className=\"user-table-container\">\n//                 <table className=\"user-table\">\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Email</th>\n//                             <th>Role</th>\n//                             <th>Registered ID</th>\n//                             <th>Working Hospitals</th>\n//                             <th>Age</th>\n//                             <th>Contact No</th>\n//                             <th>Bio</th>\n//                             <th>Profile Image</th>\n//                             <th>Signature Image</th>\n//                             <th>Actions</th>\n//                             <th>Verification</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {users.map(user => (\n//                             <tr key={user._id}>\n//                                 <td>{user.userName}</td>\n//                                 <td>{user.email}</td>\n//                                 <td>{user.role}</td>\n//                                 <td>{user.registeredId}</td>\n//                                 <td>{user.workingHospitals}</td>\n//                                 <td>{user.age}</td>\n//                                 <td>{user.contactNo}</td>\n//                                 <td>{user.bio}</td>\n//                                 <td>\n//                                     <img src={user.profileImage} alt=\"Profile\" style={{ width: \"50px\", height: \"50px\" }} />\n//                                 </td>\n//                                 <td>\n//                                     <img src={user.signatureImage} alt=\"Profile\" style={{ width: \"50px\", height: \"50px\" }} />\n//                                 </td>\n//                                 <td>\n//                                     <button onClick={() => alert('Edit functionality not implemented')}>Edit</button>\n//                                     <button onClick={() => deleteUser(user._id)}>Delete</button>\n//                                 </td>\n//                                 <td>\n//                                     {user.isVerified ? 'Verified' : <button onClick={() => verifyUser(user._id)}>Verify</button>}\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default UserTable;\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../Components/nav-admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserTable() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [editFormData, setEditFormData] = useState(null); // Holds the data of the user being edited\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = () => {\n    fetch('http://localhost:3002/Doctors/view').then(response => response.json()).then(data => setUsers(data)).catch(error => {\n      console.error('Failed to fetch users:', error);\n      alert('Failed to load users.');\n    });\n  };\n  const verifyUser = id => {\n    if (!id) {\n      alert('User ID is missing.');\n      return;\n    }\n    fetch(`http://localhost:3002/Doctors/verify/${id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(() => {\n      alert('User verified successfully');\n      fetchUsers(); // Refresh the users list\n    }).catch(error => {\n      console.error('Error verifying user:', error);\n      alert(`Failed to verify the user: ${error.message}`);\n    });\n  };\n  const deleteUser = id => {\n    if (!id) {\n      alert('User ID is missing.');\n      return;\n    }\n    if (window.confirm('Are you sure you want to delete this user?')) {\n      fetch(`http://localhost:3002/Doctors/delete/${id}`, {\n        method: 'DELETE'\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(data => {\n        alert(data.message || 'User deleted successfully');\n        fetchUsers(); // Optionally update all data or modify locally\n      }).catch(error => {\n        console.error('Error:', error);\n        alert('Failed to delete the user.');\n      });\n    }\n  };\n\n  // Open modal with user data\n  const openEditModal = user => {\n    setEditFormData(user);\n  };\n\n  // Close modal\n  const closeEditModal = () => {\n    setEditFormData(null);\n  };\n\n  // Handle form changes\n  const handleEditFormChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEditFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Submit edit form\n  const submitEditForm = id => {\n    if (!editFormData || !editFormData._id) {\n      alert('Error: No user data to update.');\n      return;\n    }\n    fetch(`http://localhost:3002/Doctors/update/${editFormData._id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(editFormData)\n    }).then(response => response.json()).then(() => {\n      alert('User updated successfully');\n      fetchUsers();\n      closeEditModal();\n    }).catch(error => {\n      console.error('Error updating user:', error);\n      alert('Failed to update user.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), editFormData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitEditForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"fullName\",\n          value: editFormData.fullName || '',\n          onChange: handleEditFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: editFormData.email || '',\n          onChange: handleEditFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Registered ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"registeredId\",\n          value: editFormData.registeredId || '',\n          onChange: handleEditFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Working Hospitals:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"workingHospitals\",\n          value: editFormData.workingHospitals || '',\n          onChange: handleEditFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"age\",\n          value: editFormData.age || '',\n          onChange: handleEditFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Contact No:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"contactNo\",\n          value: editFormData.contactNo || '',\n          onChange: handleEditFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bio:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"bio\",\n          value: editFormData.bio || '',\n          onChange: handleEditFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setEditFormData(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"user-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Registered ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Working Hospitals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Profile Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Signature Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Verification\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.registeredId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.workingHospitals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.contactNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: user.profileImage,\n                alt: \"Profile\",\n                style: {\n                  width: \"50px\",\n                  height: \"50px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: user.signatureImage,\n                alt: \"Signature\",\n                style: {\n                  width: \"50px\",\n                  height: \"50px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openEditModal(user),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteUser(user._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.isVerified ? 'Verified' : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => verifyUser(user._id),\n                children: \"Verify\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 33\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 9\n  }, this);\n}\n_s(UserTable, \"/GHxKCN+U66DrAzSJzgNls4+AdY=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","UserTable","_s","users","setUsers","editFormData","setEditFormData","fetchUsers","fetch","then","response","json","data","catch","error","console","alert","verifyUser","id","method","headers","ok","Error","status","message","deleteUser","window","confirm","openEditModal","user","closeEditModal","handleEditFormChange","event","name","value","target","prevData","submitEditForm","_id","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","fullName","onChange","email","registeredId","workingHospitals","age","contactNo","bio","onClick","map","src","profileImage","alt","style","width","height","signatureImage","isVerified","_c","$RefreshReg$"],"sources":["/home/janujah/F-Pro_Doc/client/src/Admin/Doctoradmin.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import Navbar from '../Components/nav-admin';\n\n// function UserTable() {\n//     const [users, setUsers] = useState([]);\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     const fetchUsers = () => {\n//         fetch('http://localhost:3002/Doctors/view')\n//             .then(response => response.json())\n//             .then(data => {\n//                 setUsers(data);\n//             })\n//             .catch(error => {\n//                 console.error('Failed to fetch users:', error);\n//                 alert('Failed to load users.');\n//             });\n//     };\n\n//     const verifyUser = (id) => {\n//         if (!id) {\n//             alert('User ID is missing.');\n//             return;\n//         }\n\n//         fetch(`http://localhost:3002/Doctors/verify/${id}`, {\n//             method: 'PATCH',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//         })\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error(`HTTP error! status: ${response.status}`);\n//             }\n//             return response.json();\n//         })\n//         .then(() => {\n//             alert('User verified successfully');\n//             fetchUsers();  // Refresh the users list\n//         })\n//         .catch(error => {\n//             console.error('Error verifying user:', error);\n//             alert(`Failed to verify the user: ${error.message}`);\n//         });\n//     };\n\n//     const deleteUser = (id) => {\n//         if (!id) {\n//             alert('User ID is missing.');\n//             return;\n//         }\n\n//         if (window.confirm(`Are you sure you want to delete this user?`)) {\n//             fetch(`http://localhost:3002/Doctors/delete/${id}`, {\n//                 method: 'DELETE',\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 alert(data.message || \"User deleted successfully\");\n//                 fetchUsers();  // Optionally update all data or modify locally\n//             })\n//             .catch(error => {\n//                 console.error('Error:', error);\n//                 alert('Failed to delete the user.');\n//             });\n//         }\n//     };\n\n//     return (\n//         <div className=\"user-management-container\">\n//             <Navbar />\n//             <div className=\"user-table-container\">\n//                 <table className=\"user-table\">\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Email</th>\n//                             <th>Role</th>\n//                             <th>Registered ID</th>\n//                             <th>Working Hospitals</th>\n//                             <th>Age</th>\n//                             <th>Contact No</th>\n//                             <th>Bio</th>\n//                             <th>Profile Image</th>\n//                             <th>Signature Image</th>\n//                             <th>Actions</th>\n//                             <th>Verification</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {users.map(user => (\n//                             <tr key={user._id}>\n//                                 <td>{user.userName}</td>\n//                                 <td>{user.email}</td>\n//                                 <td>{user.role}</td>\n//                                 <td>{user.registeredId}</td>\n//                                 <td>{user.workingHospitals}</td>\n//                                 <td>{user.age}</td>\n//                                 <td>{user.contactNo}</td>\n//                                 <td>{user.bio}</td>\n//                                 <td>\n//                                     <img src={user.profileImage} alt=\"Profile\" style={{ width: \"50px\", height: \"50px\" }} />\n//                                 </td>\n//                                 <td>\n//                                     <img src={user.signatureImage} alt=\"Profile\" style={{ width: \"50px\", height: \"50px\" }} />\n//                                 </td>\n//                                 <td>\n//                                     <button onClick={() => alert('Edit functionality not implemented')}>Edit</button>\n//                                     <button onClick={() => deleteUser(user._id)}>Delete</button>\n//                                 </td>\n//                                 <td>\n//                                     {user.isVerified ? 'Verified' : <button onClick={() => verifyUser(user._id)}>Verify</button>}\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default UserTable;\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../Components/nav-admin';\n\nfunction UserTable() {\n    const [users, setUsers] = useState([]);\n    const [editFormData, setEditFormData] = useState(null);  // Holds the data of the user being edited\n\n    useEffect(() => {\n        fetchUsers();\n    }, []);\n\n    const fetchUsers = () => {\n        fetch('http://localhost:3002/Doctors/view')\n            .then(response => response.json())\n            .then(data => setUsers(data))\n            .catch(error => {\n                console.error('Failed to fetch users:', error);\n                alert('Failed to load users.');\n            });\n    };\n\n    const verifyUser = (id) => {\n        if (!id) {\n            alert('User ID is missing.');\n            return;\n        }\n\n        fetch(`http://localhost:3002/Doctors/verify/${id}`, {\n            method: 'PATCH',\n            headers: { 'Content-Type': 'application/json' },\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then(() => {\n                alert('User verified successfully');\n                fetchUsers();  // Refresh the users list\n            })\n            .catch(error => {\n                console.error('Error verifying user:', error);\n                alert(`Failed to verify the user: ${error.message}`);\n            });\n    };\n\n    const deleteUser = (id) => {\n        if (!id) {\n            alert('User ID is missing.');\n            return;\n        }\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            fetch(`http://localhost:3002/Doctors/delete/${id}`, {\n                method: 'DELETE',\n            })\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error('Network response was not ok');\n                    }\n                    return response.json();\n                })\n                .then(data => {\n                    alert(data.message || 'User deleted successfully');\n                    fetchUsers();  // Optionally update all data or modify locally\n                })\n                .catch(error => {\n                    console.error('Error:', error);\n                    alert('Failed to delete the user.');\n                });\n        }\n    };\n\n    // Open modal with user data\n    const openEditModal = (user) => {\n        setEditFormData(user);\n    };\n\n    // Close modal\n    const closeEditModal = () => {\n        setEditFormData(null);\n    };\n\n    // Handle form changes\n    const handleEditFormChange = (event) => {\n        const { name, value } = event.target;\n        setEditFormData(prevData => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    // Submit edit form\n    const submitEditForm = (id) => {\n        if (!editFormData || !editFormData._id) {\n            alert('Error: No user data to update.');\n            return;\n        }\n\n        fetch(`http://localhost:3002/Doctors/update/${editFormData._id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(editFormData),\n        })\n            .then(response => response.json())\n            .then(() => {\n                alert('User updated successfully');\n                fetchUsers();\n                closeEditModal();\n            })\n            .catch(error => {\n                console.error('Error updating user:', error);\n                alert('Failed to update user.');\n            });\n    };\n\n    return (\n        <div className=\"user-management-container\">\n            <Navbar />\n            {editFormData && (\n                <div className=\"edit-modal\">\n                    <form onSubmit={submitEditForm}>\n                        <label>Name:</label>\n                        <input\n                            type=\"text\"\n                            name=\"fullName\"\n                            value={editFormData.fullName || ''}\n                            onChange={handleEditFormChange}\n                        />\n                        <label>Email:</label>\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            value={editFormData.email || ''}\n                            onChange={handleEditFormChange}\n                        />\n                        <label>Registered ID:</label>\n                        <input\n                            type=\"text\"\n                            name=\"registeredId\"\n                            value={editFormData.registeredId || ''}\n                            onChange={handleEditFormChange}\n                        />\n                        <label>Working Hospitals:</label>\n                        <input\n                            type=\"text\"\n                            name=\"workingHospitals\"\n                            value={editFormData.workingHospitals || ''}\n                            onChange={handleEditFormChange}\n                        />\n                        <label>Age:</label>\n                        <input\n                            type=\"number\"\n                            name=\"age\"\n                            value={editFormData.age || ''}\n                            onChange={handleEditFormChange}\n                        />\n                        <label>Contact No:</label>\n                        <input\n                            type=\"text\"\n                            name=\"contactNo\"\n                            value={editFormData.contactNo || ''}\n                            onChange={handleEditFormChange}\n                        />\n                        <label>Bio:</label>\n                        <textarea\n                            name=\"bio\"\n                            value={editFormData.bio || ''}\n                            onChange={handleEditFormChange}\n                        />\n                        <button type=\"submit\">Save Changes</button>\n                        <button type=\"button\" onClick={() => setEditFormData(null)}>Cancel</button>\n                    </form>\n                </div>\n            )}\n            <div className=\"user-table-container\">\n                <table className=\"user-table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            {/* <th>Role</th> */}\n                            <th>Registered ID</th>\n                            <th>Working Hospitals</th>\n                            <th>Age</th>\n                            <th>Contact No</th>\n                            <th>Bio</th>\n                            <th>Profile Image</th>\n                            <th>Signature Image</th>\n                            <th>Actions</th>\n                            <th>Verification</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map(user => (\n                            <tr key={user._id}>\n                                <td>{user.fullName}</td>\n                                <td>{user.email}</td>\n                                {/* <td>{user.role}</td> */}\n                                <td>{user.registeredId}</td>\n                                <td>{user.workingHospitals}</td>\n                                <td>{user.age}</td>\n                                <td>{user.contactNo}</td>\n                                <td>{user.bio}</td>\n                                <td>\n                                    <img src={user.profileImage} alt=\"Profile\" style={{ width: \"50px\", height: \"50px\" }} />\n                                </td>\n                                <td>\n                                    <img src={user.signatureImage} alt=\"Signature\" style={{ width: \"50px\", height: \"50px\" }} />\n                                </td>\n                                <td>\n                                    <button onClick={() => openEditModal(user)}>Edit</button>\n                                    <button onClick={() => deleteUser(user._id)}>Delete</button>\n                                </td>\n                                <td>\n                                    {user.isVerified ? 'Verified' : <button onClick={() => verifyUser(user._id)}>Verify</button>}\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default UserTable;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}