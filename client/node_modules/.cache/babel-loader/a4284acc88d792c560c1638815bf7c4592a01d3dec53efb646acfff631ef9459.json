{"ast":null,"code":"var _jsxFileName = \"/home/janujah/F-Pro_Doc/client/src/Components/createProfile.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n\n// function ProfilePage() {\n//     const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n//     const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n\n//     const formik = useFormik({\n//         initialValues: {\n//             fullName: 'John Doe',\n//             email: 'john.doe@example.com',\n//             bio: '',\n//             availableTime: '',\n//             registeredId: '',\n//             workingHospitals: '',\n//             age: '',\n//             contactNo: ''\n//         },\n//         validationSchema: Yup.object({\n//             fullName: Yup.string().required('Full name is required'),\n//             email: Yup.string().email('Invalid email address').required('Email is required'),\n//             bio: Yup.string(),\n//             availableTime: Yup.string(),\n//             registeredId: Yup.string().required('Registered ID is required'),\n//             workingHospitals: Yup.string().required('Current working hospitals are required'),\n//             age: Yup.number().positive().integer().required('Age is required'),\n//             contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n//         }),\n//         onSubmit: values => {\n//             console.log('User Profile:', values);\n//             alert('Profile updated!');\n//         },\n//     });\n\n//     const handleImageChange = (file, setImage) => {\n//         if (file) {\n//             setImage(URL.createObjectURL(file));\n//         }\n//     };\n\n//     return (\n//         <div style={{ background:'linear-gradient(to bottom,   #FFFCFC,  #AB9551)'}}>\n//         <div className=\"profile-container\" >\n//             <h1>Your Profile</h1>\n//             <form onSubmit={formik.handleSubmit} className=\"profile-form\">\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"fullName\">Full Name:</label>\n//                     <input id=\"fullName\" type=\"text\" {...formik.getFieldProps('fullName')} />\n//                     {formik.touched.fullName && formik.errors.fullName && <div className=\"error\">{formik.errors.fullName}</div>}\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"email\">Email:</label>\n//                     <input id=\"email\" type=\"email\" {...formik.getFieldProps('email')} />\n//                     {formik.touched.email && formik.errors.email && <div className=\"error\">{formik.errors.email}</div>}\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"bio\">Bio:</label>\n//                     <textarea id=\"bio\" {...formik.getFieldProps('bio')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"availableTime\">Available Time:</label>\n//                     <input id=\"availableTime\" type=\"text\" placeholder=\"e.g., Mondays, 3-5 PM\" {...formik.getFieldProps('availableTime')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"registeredId\">Registered ID:</label>\n//                     <input id=\"registeredId\" type=\"text\" {...formik.getFieldProps('registeredId')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"workingHospitals\">Current Working places:</label>\n//                     <input id=\"workingHospitals\" type=\"text\" {...formik.getFieldProps('workingHospitals')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"age\">Age:</label>\n//                     <input id=\"age\" type=\"number\" {...formik.getFieldProps('age')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"contactNo\">Contact No:</label>\n//                     <input id=\"contactNo\" type=\"text\" {...formik.getFieldProps('contactNo')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"profilePicture\">Profile Picture:</label>\n//                     <input id=\"profilePicture\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setProfileImage)} />\n//                     <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"digitalSignature\">Digital Signature:</label>\n//                     <input id=\"digitalSignature\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setSignatureImage)} />\n//                     <img src={signatureImage} alt=\"Signature\" className=\"profile-image\" />\n//                 </div>\n//                 <button type=\"submit\" className=\"update-button\"><a href='/Doctors' style={{textDecoration:'none',  color:'white'}}>Update Profile</a></button>\n//             </form>\n//         </div>\n//         </div>\n//     );\n// }\n\n// export default ProfilePage;\n\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n  const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      email: '',\n      bio: '',\n      availableTime: '',\n      registeredId: '',\n      workingHospitals: '',\n      age: '',\n      contactNo: ''\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string().required('Full name is required'),\n      email: Yup.string().email('Invalid email address').required('Email is required'),\n      bio: Yup.string(),\n      availableTime: Yup.string(),\n      registeredId: Yup.string().required('Registered ID is required'),\n      workingHospitals: Yup.string().required('Current working hospitals are required'),\n      age: Yup.number().positive().integer().required('Age is required'),\n      contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n    }),\n    onSubmit: values => {\n      axios.post('http://localhost:3002/Doctors/', {\n        ...values,\n        profileImage,\n        signatureImage\n      }).then(response => {\n        alert('Profile updated successfully!');\n        console.log(response.data);\n      }).catch(error => {\n        alert('Failed to update profile.');\n        console.error('Error:', error);\n      });\n    }\n  });\n  const handleImageChange = (file, setImage) => {\n    if (file) {\n      setImage(URL.createObjectURL(file));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom, #FFFCFC, #AB9551)'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: \"profile-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fullName\",\n            children: \"Full Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fullName\",\n            type: \"text\",\n            ...formik.getFieldProps('fullName')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 22\n          }, this), formik.touched.fullName && formik.errors.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: formik.errors.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 76\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            ...formik.getFieldProps('email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), formik.touched.email && formik.errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 70\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bio\",\n            children: \"Bio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"bio\",\n            ...formik.getFieldProps('bio')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"availableTime\",\n            children: \"Available Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"availableTime\",\n            type: \"text\",\n            placeholder: \"e.g., Mondays, 3-5 PM\",\n            ...formik.getFieldProps('availableTime')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"registeredId\",\n            children: \"Registered ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"registeredId\",\n            type: \"text\",\n            ...formik.getFieldProps('registeredId')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"workingHospitals\",\n            children: \"Current Working places:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"workingHospitals\",\n            type: \"text\",\n            ...formik.getFieldProps('workingHospitals')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age\",\n            children: \"Age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"age\",\n            type: \"number\",\n            ...formik.getFieldProps('age')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contactNo\",\n            children: \"Contact No:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"contactNo\",\n            type: \"text\",\n            ...formik.getFieldProps('contactNo')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"profilePicture\",\n            children: \"Profile Picture:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"profilePicture\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => handleImageChange(e.target.files[0], setProfileImage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profileImage,\n            alt: \"Profile\",\n            className: \"profile-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"digitalSignature\",\n            children: \"Digital Signature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"digitalSignature\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => handleImageChange(e.target.files[0], setSignatureImage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: signatureImage,\n            alt: \"Signature\",\n            className: \"profile-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"update-button\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/Doctors\",\n            style: {\n              textDecoration: 'none',\n              color: 'white'\n            },\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"GMjOLY1oOjUO4P8Oc3X8j1XB9W0=\", false, function () {\n  return [useFormik];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useFormik","Yup","axios","jsxDEV","_jsxDEV","ProfilePage","_s","profileImage","setProfileImage","signatureImage","setSignatureImage","formik","initialValues","fullName","email","bio","availableTime","registeredId","workingHospitals","age","contactNo","validationSchema","object","string","required","number","positive","integer","matches","onSubmit","values","post","then","response","alert","console","log","data","catch","error","handleImageChange","file","setImage","URL","createObjectURL","style","background","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","id","type","getFieldProps","touched","errors","placeholder","accept","onChange","e","target","files","src","alt","href","textDecoration","color","_c","$RefreshReg$"],"sources":["/home/janujah/F-Pro_Doc/client/src/Components/createProfile.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n\n// function ProfilePage() {\n//     const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n//     const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n\n//     const formik = useFormik({\n//         initialValues: {\n//             fullName: 'John Doe',\n//             email: 'john.doe@example.com',\n//             bio: '',\n//             availableTime: '',\n//             registeredId: '',\n//             workingHospitals: '',\n//             age: '',\n//             contactNo: ''\n//         },\n//         validationSchema: Yup.object({\n//             fullName: Yup.string().required('Full name is required'),\n//             email: Yup.string().email('Invalid email address').required('Email is required'),\n//             bio: Yup.string(),\n//             availableTime: Yup.string(),\n//             registeredId: Yup.string().required('Registered ID is required'),\n//             workingHospitals: Yup.string().required('Current working hospitals are required'),\n//             age: Yup.number().positive().integer().required('Age is required'),\n//             contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n//         }),\n//         onSubmit: values => {\n//             console.log('User Profile:', values);\n//             alert('Profile updated!');\n//         },\n//     });\n\n//     const handleImageChange = (file, setImage) => {\n//         if (file) {\n//             setImage(URL.createObjectURL(file));\n//         }\n//     };\n\n//     return (\n//         <div style={{ background:'linear-gradient(to bottom,   #FFFCFC,  #AB9551)'}}>\n//         <div className=\"profile-container\" >\n//             <h1>Your Profile</h1>\n//             <form onSubmit={formik.handleSubmit} className=\"profile-form\">\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"fullName\">Full Name:</label>\n//                     <input id=\"fullName\" type=\"text\" {...formik.getFieldProps('fullName')} />\n//                     {formik.touched.fullName && formik.errors.fullName && <div className=\"error\">{formik.errors.fullName}</div>}\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"email\">Email:</label>\n//                     <input id=\"email\" type=\"email\" {...formik.getFieldProps('email')} />\n//                     {formik.touched.email && formik.errors.email && <div className=\"error\">{formik.errors.email}</div>}\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"bio\">Bio:</label>\n//                     <textarea id=\"bio\" {...formik.getFieldProps('bio')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"availableTime\">Available Time:</label>\n//                     <input id=\"availableTime\" type=\"text\" placeholder=\"e.g., Mondays, 3-5 PM\" {...formik.getFieldProps('availableTime')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"registeredId\">Registered ID:</label>\n//                     <input id=\"registeredId\" type=\"text\" {...formik.getFieldProps('registeredId')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"workingHospitals\">Current Working places:</label>\n//                     <input id=\"workingHospitals\" type=\"text\" {...formik.getFieldProps('workingHospitals')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"age\">Age:</label>\n//                     <input id=\"age\" type=\"number\" {...formik.getFieldProps('age')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"contactNo\">Contact No:</label>\n//                     <input id=\"contactNo\" type=\"text\" {...formik.getFieldProps('contactNo')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"profilePicture\">Profile Picture:</label>\n//                     <input id=\"profilePicture\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setProfileImage)} />\n//                     <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"digitalSignature\">Digital Signature:</label>\n//                     <input id=\"digitalSignature\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setSignatureImage)} />\n//                     <img src={signatureImage} alt=\"Signature\" className=\"profile-image\" />\n//                 </div>\n//                 <button type=\"submit\" className=\"update-button\"><a href='/Doctors' style={{textDecoration:'none',  color:'white'}}>Update Profile</a></button>\n//             </form>\n//         </div>\n//         </div>\n//     );\n// }\n\n// export default ProfilePage;\n\n\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nfunction ProfilePage() {\n    const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n    const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: '',\n            email: '',\n            bio: '',\n            availableTime: '',\n            registeredId: '',\n            workingHospitals: '',\n            age: '',\n            contactNo: ''\n        },\n        validationSchema: Yup.object({\n            fullName: Yup.string().required('Full name is required'),\n            email: Yup.string().email('Invalid email address').required('Email is required'),\n            bio: Yup.string(),\n            availableTime: Yup.string(),\n            registeredId: Yup.string().required('Registered ID is required'),\n            workingHospitals: Yup.string().required('Current working hospitals are required'),\n            age: Yup.number().positive().integer().required('Age is required'),\n            contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n        }),\n        onSubmit: values => {\n            axios.post('http://localhost:3002/Doctors/', {\n                ...values,\n                profileImage,  \n                signatureImage\n            })\n            .then(response => {\n                alert('Profile updated successfully!');\n                console.log(response.data);\n            })\n            .catch(error => {\n                alert('Failed to update profile.');\n                console.error('Error:', error);\n            });\n        },\n    });\n\n    const handleImageChange = (file, setImage) => {\n        if (file) {\n            setImage(URL.createObjectURL(file));\n        }\n    };\n\n    return (\n        <div style={{ background: 'linear-gradient(to bottom, #FFFCFC, #AB9551)' }}>\n            <div className=\"profile-container\">\n                <h1>Your Profile</h1>\n             <form onSubmit={formik.handleSubmit} className=\"profile-form\">\n                 <div className=\"form-group\">\n                     <label htmlFor=\"fullName\">Full Name:</label>\n                     <input id=\"fullName\" type=\"text\" {...formik.getFieldProps('fullName')} />\n                     {formik.touched.fullName && formik.errors.fullName && <div className=\"error\">{formik.errors.fullName}</div>}\n                 </div>\n                 <div className=\"form-group\">\n                     <label htmlFor=\"email\">Email:</label>\n                    <input id=\"email\" type=\"email\" {...formik.getFieldProps('email')} />\n                     {formik.touched.email && formik.errors.email && <div className=\"error\">{formik.errors.email}</div>}\n                 </div>\n                 <div className=\"form-group\">\n                     <label htmlFor=\"bio\">Bio:</label>\n                     <textarea id=\"bio\" {...formik.getFieldProps('bio')} />\n                </div>\n                 <div className=\"form-group\">\n                     <label htmlFor=\"availableTime\">Available Time:</label>\n                     <input id=\"availableTime\" type=\"text\" placeholder=\"e.g., Mondays, 3-5 PM\" {...formik.getFieldProps('availableTime')} />\n                 </div>\n                 <div className=\"form-group\">\n                     <label htmlFor=\"registeredId\">Registered ID:</label>\n                     <input id=\"registeredId\" type=\"text\" {...formik.getFieldProps('registeredId')} />\n                 </div>\n                 <div className=\"form-group\">\n                     <label htmlFor=\"workingHospitals\">Current Working places:</label>\n                     <input id=\"workingHospitals\" type=\"text\" {...formik.getFieldProps('workingHospitals')} />\n                 </div>\n                 <div className=\"form-group\">\n                     <label htmlFor=\"age\">Age:</label>\n                     <input id=\"age\" type=\"number\" {...formik.getFieldProps('age')} />\n                 </div>\n                 <div className=\"form-group\">\n                     <label htmlFor=\"contactNo\">Contact No:</label>\n                     <input id=\"contactNo\" type=\"text\" {...formik.getFieldProps('contactNo')} />\n                 </div>\n                 <div className=\"form-group\">\n                     <label htmlFor=\"profilePicture\">Profile Picture:</label>\n                     <input id=\"profilePicture\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setProfileImage)} />\n                     <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\n                 </div>\n                 <div className=\"form-group\">\n                     <label htmlFor=\"digitalSignature\">Digital Signature:</label>\n                     <input id=\"digitalSignature\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setSignatureImage)} />\n                     <img src={signatureImage} alt=\"Signature\" className=\"profile-image\" />\n                 </div>\n                 <button type=\"submit\" className=\"update-button\"><a href='/Doctors' style={{textDecoration:'none',  color:'white'}}>Update Profile</a></button>\n            </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}