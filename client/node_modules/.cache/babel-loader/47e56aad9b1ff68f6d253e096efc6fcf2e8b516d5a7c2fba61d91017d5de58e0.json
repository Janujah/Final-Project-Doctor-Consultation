{"ast":null,"code":"var _jsxFileName = \"/home/janujah/F-Pro_Doc/client/src/Components/createProfile.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n\n// function ProfilePage() {\n//     const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n//     const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n\n//     const formik = useFormik({\n//         initialValues: {\n//             fullName: 'John Doe',\n//             email: 'john.doe@example.com',\n//             bio: '',\n//             availableTime: '',\n//             registeredId: '',\n//             workingHospitals: '',\n//             age: '',\n//             contactNo: ''\n//         },\n//         validationSchema: Yup.object({\n//             fullName: Yup.string().required('Full name is required'),\n//             email: Yup.string().email('Invalid email address').required('Email is required'),\n//             bio: Yup.string(),\n//             availableTime: Yup.string(),\n//             registeredId: Yup.string().required('Registered ID is required'),\n//             workingHospitals: Yup.string().required('Current working hospitals are required'),\n//             age: Yup.number().positive().integer().required('Age is required'),\n//             contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n//         }),\n//         onSubmit: values => {\n//             console.log('User Profile:', values);\n//             alert('Profile updated!');\n//         },\n//     });\n\n//     const handleImageChange = (file, setImage) => {\n//         if (file) {\n//             setImage(URL.createObjectURL(file));\n//         }\n//     };\n\n//     return (\n//         <div style={{ background:'linear-gradient(to bottom,   #FFFCFC,  #AB9551)'}}>\n//         <div className=\"profile-container\" >\n//             <h1>Your Profile</h1>\n//             <form onSubmit={formik.handleSubmit} className=\"profile-form\">\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"fullName\">Full Name:</label>\n//                     <input id=\"fullName\" type=\"text\" {...formik.getFieldProps('fullName')} />\n//                     {formik.touched.fullName && formik.errors.fullName && <div className=\"error\">{formik.errors.fullName}</div>}\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"email\">Email:</label>\n//                     <input id=\"email\" type=\"email\" {...formik.getFieldProps('email')} />\n//                     {formik.touched.email && formik.errors.email && <div className=\"error\">{formik.errors.email}</div>}\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"bio\">Bio:</label>\n//                     <textarea id=\"bio\" {...formik.getFieldProps('bio')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"availableTime\">Available Time:</label>\n//                     <input id=\"availableTime\" type=\"text\" placeholder=\"e.g., Mondays, 3-5 PM\" {...formik.getFieldProps('availableTime')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"registeredId\">Registered ID:</label>\n//                     <input id=\"registeredId\" type=\"text\" {...formik.getFieldProps('registeredId')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"workingHospitals\">Current Working places:</label>\n//                     <input id=\"workingHospitals\" type=\"text\" {...formik.getFieldProps('workingHospitals')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"age\">Age:</label>\n//                     <input id=\"age\" type=\"number\" {...formik.getFieldProps('age')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"contactNo\">Contact No:</label>\n//                     <input id=\"contactNo\" type=\"text\" {...formik.getFieldProps('contactNo')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"profilePicture\">Profile Picture:</label>\n//                     <input id=\"profilePicture\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setProfileImage)} />\n//                     <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"digitalSignature\">Digital Signature:</label>\n//                     <input id=\"digitalSignature\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setSignatureImage)} />\n//                     <img src={signatureImage} alt=\"Signature\" className=\"profile-image\" />\n//                 </div>\n//                 <button type=\"submit\" className=\"update-button\"><a href='/Doctors' style={{textDecoration:'none',  color:'white'}}>Update Profile</a></button>\n//             </form>\n//         </div>\n//         </div>\n//     );\n// }\n\n// export default ProfilePage;\n\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n  const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n  const formik = useFormik({\n    initialValues: {\n      fullName: '',\n      email: '',\n      bio: '',\n      availableTime: '',\n      registeredId: '',\n      workingHospitals: '',\n      age: '',\n      contactNo: ''\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string().required('Full name is required'),\n      email: Yup.string().email('Invalid email address').required('Email is required'),\n      bio: Yup.string(),\n      availableTime: Yup.string(),\n      registeredId: Yup.string().required('Registered ID is required'),\n      workingHospitals: Yup.string().required('Current working hospitals are required'),\n      age: Yup.number().positive().integer().required('Age is required'),\n      contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n    }),\n    onSubmit: values => {\n      axios.post('http://localhost:3002/Doctors/create', {\n        ...values,\n        profileImage,\n        signatureImage\n      }).then(response => {\n        alert('Profile updated successfully!');\n      }).catch(error => {\n        alert('Failed to update profile.');\n        console.error('Error:', error);\n      });\n    }\n  });\n  const handleImageChange = (event, setImage) => {\n    const file = event.currentTarget.files[0];\n    if (file) {\n      setImage(URL.createObjectURL(file));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    style: {\n      padding: \"20px\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Your Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        maxWidth: \"500px\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fullName\",\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"fullName\",\n        type: \"text\",\n        ...formik.getFieldProps('fullName'),\n        style: {\n          padding: \"8px\",\n          margin: \"5px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), formik.touched.fullName && formik.errors.fullName && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"email\",\n        ...formik.getFieldProps('email'),\n        style: {\n          padding: \"8px\",\n          margin: \"5px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), formik.touched.email && formik.errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bio\",\n        children: \"Bio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"bio\",\n        ...formik.getFieldProps('bio'),\n        style: {\n          padding: \"8px\",\n          margin: \"5px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"availableTime\",\n        children: \"Available Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"availableTime\",\n        type: \"text\",\n        ...formik.getFieldProps('availableTime'),\n        style: {\n          padding: \"8px\",\n          margin: \"5px 0\"\n        },\n        placeholder: \"e.g., Mondays, 3-5 PM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"registeredId\",\n        children: \"Registered ID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"registeredId\",\n        type: \"text\",\n        ...formik.getFieldProps('registeredId'),\n        style: {\n          padding: \"8px\",\n          margin: \"5px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"workingHospitals\",\n        children: \"Current Working Places:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"workingHospitals\",\n        type: \"text\",\n        ...formik.getFieldProps('workingHospitals'),\n        style: {\n          padding: \"8px\",\n          margin: \"5px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"age\",\n        type: \"number\",\n        ...formik.getFieldProps('age'),\n        style: {\n          padding: \"8px\",\n          margin: \"5px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"contactNo\",\n        children: \"Contact No:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"contactNo\",\n        type: \"text\",\n        ...formik.getFieldProps('contactNo'),\n        style: {\n          padding: \"8px\",\n          margin: \"5px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"profilePicture\",\n        children: \"Profile Picture:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"profilePicture\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: event => handleImageChange(event, setProfileImage),\n        style: {\n          margin: \"5px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: profileImage,\n        alt: \"Profile\",\n        style: {\n          width: \"100px\",\n          height: \"100px\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"digitalSignature\",\n        children: \"Digital Signature:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"digitalSignature\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: event => handleImageChange(event, setSignatureImage),\n        style: {\n          margin: \"5px 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: signatureImage,\n        alt: \"Signature\",\n        style: {\n          width: \"100px\",\n          height: \"100px\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"10px\",\n          background: \"#4CAF50\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: \"pointer\"\n        },\n        children: \"Save Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"GMjOLY1oOjUO4P8Oc3X8j1XB9W0=\", false, function () {\n  return [useFormik];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useFormik","Yup","axios","jsxDEV","_jsxDEV","ProfilePage","_s","profileImage","setProfileImage","signatureImage","setSignatureImage","formik","initialValues","fullName","email","bio","availableTime","registeredId","workingHospitals","age","contactNo","validationSchema","object","string","required","number","positive","integer","matches","onSubmit","values","post","then","response","alert","catch","error","console","handleImageChange","event","setImage","file","currentTarget","files","URL","createObjectURL","className","style","padding","fontFamily","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","display","flexDirection","maxWidth","margin","htmlFor","id","type","getFieldProps","touched","errors","color","placeholder","accept","onChange","src","alt","width","height","marginBottom","background","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/home/janujah/F-Pro_Doc/client/src/Components/createProfile.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useFormik } from 'formik';\n// import * as Yup from 'yup';\n\n// function ProfilePage() {\n//     const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n//     const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n\n//     const formik = useFormik({\n//         initialValues: {\n//             fullName: 'John Doe',\n//             email: 'john.doe@example.com',\n//             bio: '',\n//             availableTime: '',\n//             registeredId: '',\n//             workingHospitals: '',\n//             age: '',\n//             contactNo: ''\n//         },\n//         validationSchema: Yup.object({\n//             fullName: Yup.string().required('Full name is required'),\n//             email: Yup.string().email('Invalid email address').required('Email is required'),\n//             bio: Yup.string(),\n//             availableTime: Yup.string(),\n//             registeredId: Yup.string().required('Registered ID is required'),\n//             workingHospitals: Yup.string().required('Current working hospitals are required'),\n//             age: Yup.number().positive().integer().required('Age is required'),\n//             contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n//         }),\n//         onSubmit: values => {\n//             console.log('User Profile:', values);\n//             alert('Profile updated!');\n//         },\n//     });\n\n//     const handleImageChange = (file, setImage) => {\n//         if (file) {\n//             setImage(URL.createObjectURL(file));\n//         }\n//     };\n\n//     return (\n//         <div style={{ background:'linear-gradient(to bottom,   #FFFCFC,  #AB9551)'}}>\n//         <div className=\"profile-container\" >\n//             <h1>Your Profile</h1>\n//             <form onSubmit={formik.handleSubmit} className=\"profile-form\">\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"fullName\">Full Name:</label>\n//                     <input id=\"fullName\" type=\"text\" {...formik.getFieldProps('fullName')} />\n//                     {formik.touched.fullName && formik.errors.fullName && <div className=\"error\">{formik.errors.fullName}</div>}\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"email\">Email:</label>\n//                     <input id=\"email\" type=\"email\" {...formik.getFieldProps('email')} />\n//                     {formik.touched.email && formik.errors.email && <div className=\"error\">{formik.errors.email}</div>}\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"bio\">Bio:</label>\n//                     <textarea id=\"bio\" {...formik.getFieldProps('bio')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"availableTime\">Available Time:</label>\n//                     <input id=\"availableTime\" type=\"text\" placeholder=\"e.g., Mondays, 3-5 PM\" {...formik.getFieldProps('availableTime')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"registeredId\">Registered ID:</label>\n//                     <input id=\"registeredId\" type=\"text\" {...formik.getFieldProps('registeredId')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"workingHospitals\">Current Working places:</label>\n//                     <input id=\"workingHospitals\" type=\"text\" {...formik.getFieldProps('workingHospitals')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"age\">Age:</label>\n//                     <input id=\"age\" type=\"number\" {...formik.getFieldProps('age')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"contactNo\">Contact No:</label>\n//                     <input id=\"contactNo\" type=\"text\" {...formik.getFieldProps('contactNo')} />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"profilePicture\">Profile Picture:</label>\n//                     <input id=\"profilePicture\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setProfileImage)} />\n//                     <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"digitalSignature\">Digital Signature:</label>\n//                     <input id=\"digitalSignature\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setSignatureImage)} />\n//                     <img src={signatureImage} alt=\"Signature\" className=\"profile-image\" />\n//                 </div>\n//                 <button type=\"submit\" className=\"update-button\"><a href='/Doctors' style={{textDecoration:'none',  color:'white'}}>Update Profile</a></button>\n//             </form>\n//         </div>\n//         </div>\n//     );\n// }\n\n// export default ProfilePage;\n\n\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nfunction ProfilePage() {\n    const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n    const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: '',\n            email: '',\n            bio: '',\n            availableTime: '',\n            registeredId: '',\n            workingHospitals: '',\n            age: '',\n            contactNo: ''\n        },\n        validationSchema: Yup.object({\n            fullName: Yup.string().required('Full name is required'),\n            email: Yup.string().email('Invalid email address').required('Email is required'),\n            bio: Yup.string(),\n            availableTime: Yup.string(),\n            registeredId: Yup.string().required('Registered ID is required'),\n            workingHospitals: Yup.string().required('Current working hospitals are required'),\n            age: Yup.number().positive().integer().required('Age is required'),\n            contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n        }),\n        \n        onSubmit: values => {\n            axios.post('http://localhost:3002/Doctors/create', {\n                ...values,\n                profileImage,\n                signatureImage\n            })\n            .then(response => {\n                alert('Profile updated successfully!');\n            })\n            .catch(error => {\n                alert('Failed to update profile.');\n                console.error('Error:', error);\n            });\n        },\n    });\n\n    const handleImageChange = (event, setImage) => {\n        const file = event.currentTarget.files[0];\n        if (file) {\n            setImage(URL.createObjectURL(file));\n        }\n    };\n\n    return (\n        <div className=\"profile-container\" style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n            <h1 style={{ textAlign: \"center\" }}>Your Profile</h1>\n            <form onSubmit={formik.handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", maxWidth: \"500px\", margin: \"auto\" }}>\n                {/* Full Name */}\n                <label htmlFor=\"fullName\">Full Name:</label>\n                <input\n                    id=\"fullName\"\n                    type=\"text\"\n                    {...formik.getFieldProps('fullName')}\n                    style={{ padding: \"8px\", margin: \"5px 0\" }}\n                />\n                {formik.touched.fullName && formik.errors.fullName && <div style={{ color: \"red\" }}>{formik.errors.fullName}</div>}\n\n                {/* Email */}\n                <label htmlFor=\"email\">Email:</label>\n                <input\n                    id=\"email\"\n                    type=\"email\"\n                    {...formik.getFieldProps('email')}\n                    style={{ padding: \"8px\", margin: \"5px 0\" }}\n                />\n                {formik.touched.email && formik.errors.email && <div style={{ color: \"red\" }}>{formik.errors.email}</div>}\n\n                {/* Bio */}\n                <label htmlFor=\"bio\">Bio:</label>\n                <textarea\n                    id=\"bio\"\n                    {...formik.getFieldProps('bio')}\n                    style={{ padding: \"8px\", margin: \"5px 0\" }}\n                />\n\n                {/* Available Time */}\n                <label htmlFor=\"availableTime\">Available Time:</label>\n                <input\n                    id=\"availableTime\"\n                    type=\"text\"\n                    {...formik.getFieldProps('availableTime')}\n                    style={{ padding: \"8px\", margin: \"5px 0\" }}\n                    placeholder=\"e.g., Mondays, 3-5 PM\"\n                />\n\n                {/* Registered ID */}\n                <label htmlFor=\"registeredId\">Registered ID:</label>\n                <input\n                    id=\"registeredId\"\n                    type=\"text\"\n                    {...formik.getFieldProps('registeredId')}\n                    style={{ padding: \"8px\", margin: \"5px 0\" }}\n                />\n\n                {/* Working Hospitals */}\n                <label htmlFor=\"workingHospitals\">Current Working Places:</label>\n                <input\n                    id=\"workingHospitals\"\n                    type=\"text\"\n                    {...formik.getFieldProps('workingHospitals')}\n                    style={{ padding: \"8px\", margin: \"5px 0\" }}\n                />\n\n                {/* Age */}\n                <label htmlFor=\"age\">Age:</label>\n                <input\n                    id=\"age\"\n                    type=\"number\"\n                    {...formik.getFieldProps('age')}\n                    style={{ padding: \"8px\", margin: \"5px 0\" }}\n                />\n\n                {/* Contact No */}\n                <label htmlFor=\"contactNo\">Contact No:</label>\n                <input\n                    id=\"contactNo\"\n                    type=\"text\"\n                    {...formik.getFieldProps('contactNo')}\n                    style={{ padding: \"8px\", margin: \"5px 0\" }}\n                />\n\n                {/* Profile Picture */}\n                <label htmlFor=\"profilePicture\">Profile Picture:</label>\n                <input\n                    id=\"profilePicture\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(event) => handleImageChange(event, setProfileImage)}\n                    style={{ margin: \"5px 0\" }}\n                />\n                <img src={profileImage} alt=\"Profile\" style={{ width: \"100px\", height: \"100px\", marginBottom: \"10px\" }} />\n\n                {/* Digital Signature */}\n                <label htmlFor=\"digitalSignature\">Digital Signature:</label>\n                <input\n                    id=\"digitalSignature\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(event) => handleImageChange(event, setSignatureImage)}\n                    style={{ margin: \"5px 0\" }}\n                />\n                <img src={signatureImage} alt=\"Signature\" style={{ width: \"100px\", height: \"100px\", marginBottom: \"10px\" }} />\n\n                <button type=\"submit\" style={{ padding: \"10px\", background: \"#4CAF50\", color: \"white\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\" }}>\n                    Save Profile\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default ProfilePage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}