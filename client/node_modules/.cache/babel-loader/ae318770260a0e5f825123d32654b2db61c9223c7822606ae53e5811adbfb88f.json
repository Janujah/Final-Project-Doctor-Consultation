{"ast":null,"code":"var _jsxFileName = \"/home/janujah/Desktop/F-Pro_Doc/client/src/Components/AppointmentCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  'en-US': require('date-fns/locale/en-US')\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst AppointmentCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const handleSelectSlot = ({\n    start,\n    end\n  }) => {\n    const title = window.prompt('New Appointment Title:');\n    if (title) {\n      setEvents(prevEvents => [...prevEvents, {\n        start,\n        end,\n        title\n      }]);\n    }\n  };\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    let newStyle = {\n      backgroundColor: \"lightblue\",\n      color: 'black',\n      borderRadius: \"0px\",\n      border: \"none\"\n    };\n    if (event.isImportant) {\n      newStyle.backgroundColor = \"red\";\n    }\n    return {\n      className: \"\",\n      style: newStyle\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 900\n      },\n      selectable: true,\n      onSelectSlot: handleSelectSlot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentCalendar, \"fh+hzEDekCPeegwQh0J56A4r3Ew=\");\n_c = AppointmentCalendar;\nexport default AppointmentCalendar;\nvar _c;\n$RefreshReg$(_c, \"AppointmentCalendar\");","map":{"version":3,"names":["React","useState","Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","jsxDEV","_jsxDEV","locales","require","localizer","AppointmentCalendar","_s","events","setEvents","handleSelectSlot","start","end","title","window","prompt","prevEvents","eventStyleGetter","event","isSelected","newStyle","backgroundColor","color","borderRadius","border","isImportant","className","style","height","children","startAccessor","endAccessor","selectable","onSelectSlot","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/janujah/Desktop/F-Pro_Doc/client/src/Components/AppointmentCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar';\nimport format from 'date-fns/format';\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from 'date-fns/getDay';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\nconst locales = {\n  'en-US': require('date-fns/locale/en-US')\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales,\n});\n\nconst AppointmentCalendar = () => {\n  const [events, setEvents] = useState([]);\n\n  const handleSelectSlot = ({ start, end }) => {\n    const title = window.prompt('New Appointment Title:');\n    if (title) {\n      setEvents(prevEvents => [\n        ...prevEvents,\n        { start, end, title },\n      ]);\n    }\n  };\n  const eventStyleGetter = (event, start, end, isSelected) => {\n    let newStyle = {\n      backgroundColor: \"lightblue\",\n      color: 'black',\n      borderRadius: \"0px\",\n      border: \"none\"\n    };\n  \n    if (event.isImportant) {\n      newStyle.backgroundColor = \"red\";\n    }\n  \n    return {\n      className: \"\",\n      style: newStyle\n    };\n  };\n  \n  return (\n    <div style={{ height: '500px' }}>\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 900 }}\n        selectable\n        onSelectSlot={handleSelectSlot}\n      />\n    </div>\n  );\n};\n\nexport default AppointmentCalendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,gBAAgB,QAAQ,oBAAoB;AAC/D,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,mDAAmD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,OAAO,GAAG;EACd,OAAO,EAAEC,OAAO,CAAC,uBAAuB;AAC1C,CAAC;AACD,MAAMC,SAAS,GAAGT,gBAAgB,CAAC;EACjCC,MAAM;EACNC,KAAK;EACLC,WAAW;EACXC,MAAM;EACNG;AACF,CAAC,CAAC;AAEF,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMgB,gBAAgB,GAAGA,CAAC;IAAEC,KAAK;IAAEC;EAAI,CAAC,KAAK;IAC3C,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAAC,wBAAwB,CAAC;IACrD,IAAIF,KAAK,EAAE;MACTJ,SAAS,CAACO,UAAU,IAAI,CACtB,GAAGA,UAAU,EACb;QAAEL,KAAK;QAAEC,GAAG;QAAEC;MAAM,CAAC,CACtB,CAAC;IACJ;EACF,CAAC;EACD,MAAMI,gBAAgB,GAAGA,CAACC,KAAK,EAAEP,KAAK,EAAEC,GAAG,EAAEO,UAAU,KAAK;IAC1D,IAAIC,QAAQ,GAAG;MACbC,eAAe,EAAE,WAAW;MAC5BC,KAAK,EAAE,OAAO;MACdC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAE;IACV,CAAC;IAED,IAAIN,KAAK,CAACO,WAAW,EAAE;MACrBL,QAAQ,CAACC,eAAe,GAAG,KAAK;IAClC;IAEA,OAAO;MACLK,SAAS,EAAE,EAAE;MACbC,KAAK,EAAEP;IACT,CAAC;EACH,CAAC;EAED,oBACElB,OAAA;IAAKyB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9B3B,OAAA,CAACP,QAAQ;MACPU,SAAS,EAAEA,SAAU;MACrBG,MAAM,EAAEA,MAAO;MACfsB,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAC,KAAK;MACjBJ,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAI,CAAE;MACvBI,UAAU;MACVC,YAAY,EAAEvB;IAAiB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA3CID,mBAAmB;AAAAgC,EAAA,GAAnBhC,mBAAmB;AA6CzB,eAAeA,mBAAmB;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}