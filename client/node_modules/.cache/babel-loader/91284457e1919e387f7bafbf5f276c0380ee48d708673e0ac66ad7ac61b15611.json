{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import DoctorCard from './doccard';\n// import Nav from './navbar'\n\n// function DoctorPage() {\n//     const [doctors, setDoctors] = useState([]);\n\n//     useEffect(() => {\n//         fetch('http://localhost:3002/Doctors/view')\n//             .then(response => response.json())\n//             .then(data => setDoctors(data))\n//             .catch(error => console.error('Error:', error));\n//     }, []);\n\n//     return (\n//         <div>\n//             <Nav/><br/><br/><br/><br/><br/><br/><br/>\n//         <div><h1 style={{fontSize:'90px', textAlign:'center'}}className='ourservices'><b>Doctors</b></h1></div><br></br>\n//             <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n//             {doctors.map(doctor => (\n//               <a href='/profile' style={{textDecoration:'none',color:'black'}}>  <DoctorCard key={doctor._id} doctor={doctor} /></a>\n//             ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default DoctorPage;\n\n// import React, { useState, useEffect } from 'react';\n// import DoctorCard from '../Components/doccard';\n// import Navbar from '../Components/nav'\n\n// function DoctorShowcase() {\n//     const [doctors, setDoctors] = useState([]);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         fetchVerifiedDoctors();\n//     }, []);\n\n//     const fetchVerifiedDoctors = () => {\n//         fetch('http://localhost:3002/Doctors/view/verified') // Assuming 'verified' fetches only verified doctors\n//             .then(response => response.json())\n//             .then(data => setDoctors(data))\n//             .catch(error => console.error('Failed to fetch verified doctors:', error));\n//     };\n\n//     const handleSearchChange = (event) => {\n//         setSearchTerm(event.target.value);\n//     };\n\n//     const filteredDoctors = doctors.filter(doctor =>\n//         doctor.fullName.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n\n//     return (\n//         <div>\n//             <Navbar />\n//             <div style={{ padding: '20px' }}>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search doctors...\"\n//                     value={searchTerm}\n//                     onChange={handleSearchChange}\n//                     style={{ width: '100%', padding: '10px' }}\n//                 />\n//             </div>\n//             <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n//                 {filteredDoctors.map(doctor => (\n//                      <a href='/profile' ><DoctorCard key={doctor._id} doctor={doctor} /></a>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default DoctorShowcase;","map":{"version":3,"names":[],"sources":["/home/janujah/F-Pro_Doc/client/src/Components/DoctorPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import DoctorCard from './doccard';\n// import Nav from './navbar'\n\n// function DoctorPage() {\n//     const [doctors, setDoctors] = useState([]);\n\n//     useEffect(() => {\n//         fetch('http://localhost:3002/Doctors/view')\n//             .then(response => response.json())\n//             .then(data => setDoctors(data))\n//             .catch(error => console.error('Error:', error));\n//     }, []);\n\n//     return (\n//         <div>\n//             <Nav/><br/><br/><br/><br/><br/><br/><br/>\n//         <div><h1 style={{fontSize:'90px', textAlign:'center'}}className='ourservices'><b>Doctors</b></h1></div><br></br>\n//             <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n//             {doctors.map(doctor => (\n//               <a href='/profile' style={{textDecoration:'none',color:'black'}}>  <DoctorCard key={doctor._id} doctor={doctor} /></a>\n//             ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default DoctorPage;\n\n// import React, { useState, useEffect } from 'react';\n// import DoctorCard from '../Components/doccard';\n// import Navbar from '../Components/nav'\n\n// function DoctorShowcase() {\n//     const [doctors, setDoctors] = useState([]);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         fetchVerifiedDoctors();\n//     }, []);\n\n//     const fetchVerifiedDoctors = () => {\n//         fetch('http://localhost:3002/Doctors/view/verified') // Assuming 'verified' fetches only verified doctors\n//             .then(response => response.json())\n//             .then(data => setDoctors(data))\n//             .catch(error => console.error('Failed to fetch verified doctors:', error));\n//     };\n\n//     const handleSearchChange = (event) => {\n//         setSearchTerm(event.target.value);\n//     };\n\n//     const filteredDoctors = doctors.filter(doctor =>\n//         doctor.fullName.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n\n//     return (\n//         <div>\n//             <Navbar />\n//             <div style={{ padding: '20px' }}>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search doctors...\"\n//                     value={searchTerm}\n//                     onChange={handleSearchChange}\n//                     style={{ width: '100%', padding: '10px' }}\n//                 />\n//             </div>\n//             <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n//                 {filteredDoctors.map(doctor => (\n//                      <a href='/profile' ><DoctorCard key={doctor._id} doctor={doctor} /></a>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default DoctorShowcase;\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}