{"ast":null,"code":"var _jsxFileName = \"/home/janujah/F-Pro_Doc/client/src/Components/Docpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorForm({\n  doctor,\n  onUpdate\n}) {\n  _s();\n  const [name, setName] = useState(doctor.name);\n  const [position, setPosition] = useState(doctor.position);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`http://localhost:3000/Doctors/update/${doctor.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        position\n      })\n    }).then(response => response.json()).then(data => {\n      onUpdate(data); // Assume the backend returns all updated doctors\n    }).catch(error => console.error('Error updating doctor:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: position,\n      onChange: e => setPosition(e.target.value),\n      placeholder: \"Position\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorForm, \"NHc1bQd0p33A2QqOoCAIcqnjBrU=\");\n_c = DoctorForm;\nexport default DoctorForm;\nvar _c;\n$RefreshReg$(_c, \"DoctorForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DoctorForm","doctor","onUpdate","_s","name","setName","position","setPosition","handleSubmit","e","preventDefault","fetch","id","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/janujah/F-Pro_Doc/client/src/Components/Docpage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction DoctorForm({ doctor, onUpdate }) {\n    const [name, setName] = useState(doctor.name);\n    const [position, setPosition] = useState(doctor.position);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(`http://localhost:3000/Doctors/update/${doctor.id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ name, position })\n        })\n        .then(response => response.json())\n        .then(data => {\n            onUpdate(data); // Assume the backend returns all updated doctors\n        })\n        .catch(error => console.error('Error updating doctor:', error));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Name\" />\n            <input type=\"text\" value={position} onChange={e => setPosition(e.target.value)} placeholder=\"Position\" />\n            <button type=\"submit\">Update Doctor</button>\n        </form>\n    );\n}\n\nexport default DoctorForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACI,MAAM,CAACG,IAAI,CAAC;EAC7C,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACI,MAAM,CAACK,QAAQ,CAAC;EAEzD,MAAME,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAE,wCAAuCV,MAAM,CAACW,EAAG,EAAC,EAAE;MACvDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,IAAI;QAAEE;MAAS,CAAC;IAC3C,CAAC,CAAC,CACDY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVnB,QAAQ,CAACmB,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC;EAED,oBACIxB,OAAA;IAAM0B,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBACzB3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAExB,IAAK;MAACyB,QAAQ,EAAEpB,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7FpC,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEtB,QAAS;MAACuB,QAAQ,EAAEpB,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzGpC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEf;AAAChC,EAAA,CA3BQH,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AA6BnB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}