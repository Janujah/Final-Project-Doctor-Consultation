{"ast":null,"code":"var _jsxFileName = \"/home/janujah/F-Pro_Doc/client/src/Components/createProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n  const formik = useFormik({\n    initialValues: {\n      fullName: 'John Doe',\n      email: 'john.doe@example.com',\n      bio: '',\n      availableTime: '',\n      registeredId: '',\n      digitalSignature: '',\n      // Will be updated as an image\n      workingHospitals: '',\n      age: '',\n      contactNo: ''\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string().required('Full name is required'),\n      email: Yup.string().email('Invalid email address').required('Email is required'),\n      bio: Yup.string(),\n      availableTime: Yup.string(),\n      registeredId: Yup.string(),\n      digitalSignature: Yup.string(),\n      // Can be validated as needed\n      workingHospitals: Yup.string(),\n      age: Yup.number().positive().integer(),\n      contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Invalid phone number') // Validates 10-digit phone number\n    }),\n    onSubmit: values => {\n      console.log('User Profile:', values);\n      alert('Profile updated!');\n    }\n  });\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setProfileImage(URL.createObjectURL(file));\n      // You may want to handle saving the image data to formik values here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"profile-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          children: \"Full Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fullName\",\n          type: \"text\",\n          ...formik.getFieldProps('fullName')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), formik.touched.fullName && formik.errors.fullName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          ...formik.getFieldProps('email')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"update-button\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"PrlQMgXhF9YAsucKRRQ6Is1zHQg=\", false, function () {\n  return [useFormik];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useFormik","Yup","jsxDEV","_jsxDEV","ProfilePage","_s","profileImage","setProfileImage","formik","initialValues","fullName","email","bio","availableTime","registeredId","digitalSignature","workingHospitals","age","contactNo","validationSchema","object","string","required","number","positive","integer","matches","onSubmit","values","console","log","alert","handleImageChange","event","file","target","files","URL","createObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","id","type","getFieldProps","touched","errors","_c","$RefreshReg$"],"sources":["/home/janujah/F-Pro_Doc/client/src/Components/createProfile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nfunction ProfilePage() {\n    const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: 'John Doe',\n            email: 'john.doe@example.com',\n            bio: '',\n            availableTime: '',\n            registeredId: '',\n            digitalSignature: '', // Will be updated as an image\n            workingHospitals: '',\n            age: '',\n            contactNo: ''\n        },\n        validationSchema: Yup.object({\n            fullName: Yup.string()\n                .required('Full name is required'),\n            email: Yup.string()\n                .email('Invalid email address')\n                .required('Email is required'),\n            bio: Yup.string(),\n            availableTime: Yup.string(),\n            registeredId: Yup.string(),\n            digitalSignature: Yup.string(), // Can be validated as needed\n            workingHospitals: Yup.string(),\n            age: Yup.number().positive().integer(),\n            contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Invalid phone number') // Validates 10-digit phone number\n        }),\n        onSubmit: values => {\n            console.log('User Profile:', values);\n            alert('Profile updated!');\n        },\n    });\n\n    const handleImageChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            setProfileImage(URL.createObjectURL(file));\n            // You may want to handle saving the image data to formik values here\n        }\n    };\n\n    return (\n        <div className=\"profile-container\">\n            <h1>Edit Profile</h1>\n            <form onSubmit={formik.handleSubmit} className=\"profile-form\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"fullName\">Full Name:</label>\n                    <input\n                        id=\"fullName\"\n                        type=\"text\"\n                        {...formik.getFieldProps('fullName')}\n                    />\n                    {formik.touched.fullName && formik.errors.fullName ? (\n                        <div className=\"error\">{formik.errors.fullName}</div>\n                    ) : null}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email:</label>\n                    <input\n                        id=\"email\"\n                        type=\"email\"\n                        {...formik.getFieldProps('email')}\n                    />\n                    {formik.touched.email && formik.errors.email ? (\n                        <div className=\"error\">{formik.errors.email}</div>\n                    ) : null}\n                </div>\n                {/* Add more form fields as needed */}\n                <button type=\"submit\" className=\"update-button\">Update Profile</button>\n            </form>\n        </div>\n    );\n}\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}