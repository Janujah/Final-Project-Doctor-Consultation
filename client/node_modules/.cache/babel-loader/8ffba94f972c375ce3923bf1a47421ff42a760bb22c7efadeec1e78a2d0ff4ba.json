{"ast":null,"code":"var _jsxFileName = \"/home/janujah/F-Pro_Doc/client/src/Components/createProfile.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProfilePage() {\n  _s();\n  const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n  const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n  const formik = useFormik({\n    initialValues: {\n      fullName: 'John Doe',\n      email: 'john.doe@example.com',\n      bio: '',\n      availableTime: '',\n      registeredId: '',\n      workingHospitals: '',\n      age: '',\n      contactNo: ''\n    },\n    validationSchema: Yup.object({\n      fullName: Yup.string().required('Full name is required'),\n      email: Yup.string().email('Invalid email address').required('Email is required'),\n      bio: Yup.string(),\n      availableTime: Yup.string(),\n      registeredId: Yup.string().required('Registered ID is required'),\n      workingHospitals: Yup.string().required('Current working hospitals are required'),\n      age: Yup.number().positive().integer().required('Age is required'),\n      contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n    }),\n    onSubmit: values => {\n      // Post to backend\n      axios.post('http://localhost:5000/update-profile', {\n        ...values,\n        profileImage,\n        // Assuming you want to send image URLs which are managed by the state\n        signatureImage\n      }).then(response => {\n        alert('Profile updated successfully!');\n        console.log(response.data);\n      }).catch(error => {\n        alert('Failed to update profile.');\n        console.error('Error:', error);\n      });\n    }\n  });\n  const handleImageChange = (file, setImage) => {\n    if (file) {\n      setImage(URL.createObjectURL(file));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to bottom, #FFFCFC, #AB9551)'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: \"profile-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"profilePicture\",\n            children: \"Profile Picture:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"profilePicture\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => handleImageChange(e.target.files[0], setProfileImage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profileImage,\n            alt: \"Profile\",\n            className: \"profile-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"digitalSignature\",\n            children: \"Digital Signature:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"digitalSignature\",\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => handleImageChange(e.target.files[0], setSignatureImage)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: signatureImage,\n            alt: \"Signature\",\n            className: \"profile-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"update-button\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ProfilePage, \"GMjOLY1oOjUO4P8Oc3X8j1XB9W0=\", false, function () {\n  return [useFormik];\n});\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["useFormik","Yup","axios","jsxDEV","_jsxDEV","ProfilePage","_s","profileImage","setProfileImage","useState","signatureImage","setSignatureImage","formik","initialValues","fullName","email","bio","availableTime","registeredId","workingHospitals","age","contactNo","validationSchema","object","string","required","number","positive","integer","matches","onSubmit","values","post","then","response","alert","console","log","data","catch","error","handleImageChange","file","setImage","URL","createObjectURL","style","background","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","htmlFor","id","type","accept","onChange","e","target","files","src","alt","_c","$RefreshReg$"],"sources":["/home/janujah/F-Pro_Doc/client/src/Components/createProfile.js"],"sourcesContent":["// import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nfunction ProfilePage() {\n    const [profileImage, setProfileImage] = useState('https://via.placeholder.com/150');\n    const [signatureImage, setSignatureImage] = useState('https://via.placeholder.com/150');\n\n    const formik = useFormik({\n        initialValues: {\n            fullName: 'John Doe',\n            email: 'john.doe@example.com',\n            bio: '',\n            availableTime: '',\n            registeredId: '',\n            workingHospitals: '',\n            age: '',\n            contactNo: ''\n        },\n        validationSchema: Yup.object({\n            fullName: Yup.string().required('Full name is required'),\n            email: Yup.string().email('Invalid email address').required('Email is required'),\n            bio: Yup.string(),\n            availableTime: Yup.string(),\n            registeredId: Yup.string().required('Registered ID is required'),\n            workingHospitals: Yup.string().required('Current working hospitals are required'),\n            age: Yup.number().positive().integer().required('Age is required'),\n            contactNo: Yup.string().matches(/^[0-9]{10}$/, 'Must be a valid 10-digit phone number').required('Contact number is required')\n        }),\n        onSubmit: values => {\n            // Post to backend\n            axios.post('http://localhost:5000/update-profile', {\n                ...values,\n                profileImage,  // Assuming you want to send image URLs which are managed by the state\n                signatureImage\n            })\n            .then(response => {\n                alert('Profile updated successfully!');\n                console.log(response.data);\n            })\n            .catch(error => {\n                alert('Failed to update profile.');\n                console.error('Error:', error);\n            });\n        },\n    });\n\n    const handleImageChange = (file, setImage) => {\n        if (file) {\n            setImage(URL.createObjectURL(file));\n        }\n    };\n\n    return (\n        <div style={{ background: 'linear-gradient(to bottom, #FFFCFC, #AB9551)' }}>\n            <div className=\"profile-container\">\n                <h1>Your Profile</h1>\n                <form onSubmit={formik.handleSubmit} className=\"profile-form\">\n                    {/* Your input fields */}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"profilePicture\">Profile Picture:</label>\n                        <input id=\"profilePicture\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setProfileImage)} />\n                        <img src={profileImage} alt=\"Profile\" className=\"profile-image\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"digitalSignature\">Digital Signature:</label>\n                        <input id=\"digitalSignature\" type=\"file\" accept=\"image/*\" onChange={(e) => handleImageChange(e.target.files[0], setSignatureImage)} />\n                        <img src={signatureImage} alt=\"Signature\" className=\"profile-image\" />\n                    </div>\n                    <button type=\"submit\" className=\"update-button\">Update Profile</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfilePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}