{"ast":null,"code":"var _jsxFileName = \"/home/janujah/F-Pro_Doc/client/src/Components/DoctorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DoctorCard from './doccard';\nimport Nav from './navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorPage() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3002/Doctors/view').then(response => response.json()).then(data => setDoctors(data)).catch(error => console.error('Error:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '90px',\n          textAlign: 'center'\n        },\n        className: \"ourservices\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Doctors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 87\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 112\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n      },\n      children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/profile\",\n        style: {\n          textDecoration: 'none',\n          color: 'black'\n        },\n        children: [\"  \", /*#__PURE__*/_jsxDEV(DoctorCard, {\n          doctor: doctor\n        }, doctor._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 82\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorPage, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n_c = DoctorPage;\nexport default DoctorPage;\n\n// import React, { useState, useEffect } from 'react';\n// import DoctorCard from '../Components/doccard';\n// import Navbar from '../Components/nav'\n\n// function DoctorShowcase() {\n//     const [doctors, setDoctors] = useState([]);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         fetchVerifiedDoctors();\n//     }, []);\n\n//     const fetchVerifiedDoctors = () => {\n//         fetch('http://localhost:3002/Doctors/view/verified') // Assuming 'verified' fetches only verified doctors\n//             .then(response => response.json())\n//             .then(data => setDoctors(data))\n//             .catch(error => console.error('Failed to fetch verified doctors:', error));\n//     };\n\n//     const handleSearchChange = (event) => {\n//         setSearchTerm(event.target.value);\n//     };\n\n//     const filteredDoctors = doctors.filter(doctor =>\n//         doctor.fullName.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n\n//     return (\n//         <div>\n//             <Navbar />\n//             <div style={{ padding: '20px' }}>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search doctors...\"\n//                     value={searchTerm}\n//                     onChange={handleSearchChange}\n//                     style={{ width: '100%', padding: '10px' }}\n//                 />\n//             </div>\n//             <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n//                 {filteredDoctors.map(doctor => (\n//                      <a href='/profile' ><DoctorCard key={doctor._id} doctor={doctor} /></a>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default DoctorShowcase;\nvar _c;\n$RefreshReg$(_c, \"DoctorPage\");","map":{"version":3,"names":["React","useState","useEffect","DoctorCard","Nav","jsxDEV","_jsxDEV","DoctorPage","_s","doctors","setDoctors","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontSize","textAlign","className","display","flexWrap","justifyContent","map","doctor","href","textDecoration","color","_id","_c","$RefreshReg$"],"sources":["/home/janujah/F-Pro_Doc/client/src/Components/DoctorPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DoctorCard from './doccard';\nimport Nav from './navbar'\n\nfunction DoctorPage() {\n    const [doctors, setDoctors] = useState([]);\n\n    useEffect(() => {\n        fetch('http://localhost:3002/Doctors/view')\n            .then(response => response.json())\n            .then(data => setDoctors(data))\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    return (\n        <div>\n            <Nav/><br/><br/><br/><br/><br/><br/><br/>\n        <div><h1 style={{fontSize:'90px', textAlign:'center'}}className='ourservices'><b>Doctors</b></h1></div><br></br>\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n            {doctors.map(doctor => (\n              <a href='/profile' style={{textDecoration:'none',color:'black'}}>  <DoctorCard key={doctor._id} doctor={doctor} /></a>\n            ))}\n            </div>\n        </div>\n    );\n}\n\nexport default DoctorPage;\n\n// import React, { useState, useEffect } from 'react';\n// import DoctorCard from '../Components/doccard';\n// import Navbar from '../Components/nav'\n\n// function DoctorShowcase() {\n//     const [doctors, setDoctors] = useState([]);\n//     const [searchTerm, setSearchTerm] = useState('');\n\n//     useEffect(() => {\n//         fetchVerifiedDoctors();\n//     }, []);\n\n//     const fetchVerifiedDoctors = () => {\n//         fetch('http://localhost:3002/Doctors/view/verified') // Assuming 'verified' fetches only verified doctors\n//             .then(response => response.json())\n//             .then(data => setDoctors(data))\n//             .catch(error => console.error('Failed to fetch verified doctors:', error));\n//     };\n\n//     const handleSearchChange = (event) => {\n//         setSearchTerm(event.target.value);\n//     };\n\n//     const filteredDoctors = doctors.filter(doctor =>\n//         doctor.fullName.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n\n//     return (\n//         <div>\n//             <Navbar />\n//             <div style={{ padding: '20px' }}>\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Search doctors...\"\n//                     value={searchTerm}\n//                     onChange={handleSearchChange}\n//                     style={{ width: '100%', padding: '10px' }}\n//                 />\n//             </div>\n//             <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n//                 {filteredDoctors.map(doctor => (\n//                      <a href='/profile' ><DoctorCard key={doctor._id} doctor={doctor} /></a>\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default DoctorShowcase;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}