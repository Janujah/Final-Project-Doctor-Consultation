{"ast":null,"code":"var _jsxFileName = \"/home/janujah/F-Pro_Doc/client/src/Components/DoctorPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import DoctorCard from './doccard';\n// import Nav from './navbar'\n\n// function DoctorPage() {\n//     const [doctors, setDoctors] = useState([]);\n\n//     useEffect(() => {\n//         fetch('http://localhost:3002/Doctors/view')\n//             .then(response => response.json())\n//             .then(data => setDoctors(data))\n//             .catch(error => console.error('Error:', error));\n//     }, []);\n\n//     return (\n//         <div>\n//             <Nav/><br/><br/><br/><br/><br/><br/><br/>\n//         <div><h1 style={{fontSize:'90px', textAlign:'center'}}className='ourservices'><b>Doctors</b></h1></div><br></br>\n//             <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n//             {doctors.map(doctor => (\n//               <a href='/profile' style={{textDecoration:'none',color:'black'}}>  <DoctorCard key={doctor._id} doctor={doctor} /></a>\n//             ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default DoctorPage;\n\nimport React, { useState, useEffect } from 'react';\nimport DoctorCard from '/doccard';\nimport Navbar from '../Components/nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorShowcase() {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    fetchVerifiedDoctors();\n  }, []);\n  const fetchVerifiedDoctors = () => {\n    fetch('http://localhost:3002/Doctors/view/verified') // Assuming 'verified' fetches only verified doctors\n    .then(response => response.json()).then(data => setDoctors(data)).catch(error => console.error('Failed to fetch verified doctors:', error));\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredDoctors = doctors.filter(doctor => doctor.fullName.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search doctors...\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        style: {\n          width: '100%',\n          padding: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center'\n      },\n      children: filteredDoctors.map(doctor => /*#__PURE__*/_jsxDEV(DoctorCard, {\n        doctor: doctor\n      }, doctor._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorShowcase, \"WxNNaRqNbt+7G3odOB0bOmxhFrU=\");\n_c = DoctorShowcase;\nexport default DoctorShowcase;\nvar _c;\n$RefreshReg$(_c, \"DoctorShowcase\");","map":{"version":3,"names":["React","useState","useEffect","DoctorCard","Navbar","jsxDEV","_jsxDEV","DoctorShowcase","_s","doctors","setDoctors","searchTerm","setSearchTerm","fetchVerifiedDoctors","fetch","then","response","json","data","catch","error","console","handleSearchChange","event","target","value","filteredDoctors","filter","doctor","fullName","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","type","placeholder","onChange","width","display","flexWrap","justifyContent","map","_id","_c","$RefreshReg$"],"sources":["/home/janujah/F-Pro_Doc/client/src/Components/DoctorPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import DoctorCard from './doccard';\n// import Nav from './navbar'\n\n// function DoctorPage() {\n//     const [doctors, setDoctors] = useState([]);\n\n//     useEffect(() => {\n//         fetch('http://localhost:3002/Doctors/view')\n//             .then(response => response.json())\n//             .then(data => setDoctors(data))\n//             .catch(error => console.error('Error:', error));\n//     }, []);\n\n//     return (\n//         <div>\n//             <Nav/><br/><br/><br/><br/><br/><br/><br/>\n//         <div><h1 style={{fontSize:'90px', textAlign:'center'}}className='ourservices'><b>Doctors</b></h1></div><br></br>\n//             <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n//             {doctors.map(doctor => (\n//               <a href='/profile' style={{textDecoration:'none',color:'black'}}>  <DoctorCard key={doctor._id} doctor={doctor} /></a>\n//             ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default DoctorPage;\n\nimport React, { useState, useEffect } from 'react';\nimport DoctorCard from '/doccard';\nimport Navbar from '../Components/nav'\n\nfunction DoctorShowcase() {\n    const [doctors, setDoctors] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        fetchVerifiedDoctors();\n    }, []);\n\n    const fetchVerifiedDoctors = () => {\n        fetch('http://localhost:3002/Doctors/view/verified') // Assuming 'verified' fetches only verified doctors\n            .then(response => response.json())\n            .then(data => setDoctors(data))\n            .catch(error => console.error('Failed to fetch verified doctors:', error));\n    };\n\n    const handleSearchChange = (event) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const filteredDoctors = doctors.filter(doctor =>\n        doctor.fullName.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n        <div>\n            <Navbar />\n            <div style={{ padding: '20px' }}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search doctors...\"\n                    value={searchTerm}\n                    onChange={handleSearchChange}\n                    style={{ width: '100%', padding: '10px' }}\n                />\n            </div>\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\n                {filteredDoctors.map(doctor => (\n                    <DoctorCard key={doctor._id} doctor={doctor} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default DoctorShowcase;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}