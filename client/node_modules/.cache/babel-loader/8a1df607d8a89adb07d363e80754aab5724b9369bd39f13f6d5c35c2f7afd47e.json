{"ast":null,"code":"var _jsxFileName = \"/home/janujah/F-Pro_Doc/client/src/Components/Docpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorForm({\n  doctor,\n  onUpdate\n}) {\n  _s();\n  const [name, setName] = useState(doctor.name);\n  const [photoUrl, setPhotoUrl] = useState(doctor.photoUrl);\n  const [position, setPosition] = useState(doctor.position);\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(`http://localhost:3002/doctors/update${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        photoUrl,\n        position\n      })\n    }).then(response => response.json()).then(data => onUpdate(data)).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: photoUrl,\n      onChange: e => setPhotoUrl(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: position,\n      onChange: e => setPosition(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(DoctorForm, \"0uMeRxKrHlwfRwF+WUjNl9vDIzE=\");\n_c = DoctorForm;\nvar _c;\n$RefreshReg$(_c, \"DoctorForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DoctorForm","doctor","onUpdate","_s","name","setName","photoUrl","setPhotoUrl","position","setPosition","handleSubmit","e","preventDefault","fetch","id","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/janujah/F-Pro_Doc/client/src/Components/Docpage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction DoctorForm({ doctor, onUpdate }) {\n    const [name, setName] = useState(doctor.name);\n    const [photoUrl, setPhotoUrl] = useState(doctor.photoUrl);\n    const [position, setPosition] = useState(doctor.position);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        fetch(`http://localhost:3002/doctors/update${id}`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ name, photoUrl, position })\n        })\n        .then(response => response.json())\n        .then(data => onUpdate(data))\n        .catch(error => console.error('Error:', error));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={name} onChange={e => setName(e.target.value)} />\n            <input type=\"text\" value={photoUrl} onChange={e => setPhotoUrl(e.target.value)} />\n            <input type=\"text\" value={position} onChange={e => setPosition(e.target.value)} />\n            <button type=\"submit\">Update</button>\n        </form>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAACI,MAAM,CAACG,IAAI,CAAC;EAC7C,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACI,MAAM,CAACK,QAAQ,CAAC;EACzD,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACI,MAAM,CAACO,QAAQ,CAAC;EAEzD,MAAME,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,KAAK,CAAE,uCAAsCC,EAAG,EAAC,EAAE;MAC/CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEf,IAAI;QAAEE,QAAQ;QAAEE;MAAS,CAAC;IACrD,CAAC,CAAC,CACDY,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIrB,QAAQ,CAACqB,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACnD,CAAC;EAED,oBACI1B,OAAA;IAAM4B,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBACzB7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAE1B,IAAK;MAAC2B,QAAQ,EAAEpB,CAAC,IAAIN,OAAO,CAACM,CAAC,CAACqB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1ErC,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAExB,QAAS;MAACyB,QAAQ,EAAEpB,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClFrC,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEtB,QAAS;MAACuB,QAAQ,EAAEpB,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACqB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClFrC,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEf;AAACjC,EAAA,CA3BQH,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}