{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import Navbar from '../Components/nav-admin';\n\n// function UserTable() {\n//     const [users, setUsers] = useState([]);\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     const fetchUsers = () => {\n//         fetch('http://localhost:3002/Doctors/view')\n//             .then(response => response.json())\n//             .then(data => {\n//                 setUsers(data);\n//             })\n//             .catch(error => {\n//                 console.error('Failed to fetch users:', error);\n//                 alert('Failed to load users.');\n//             });\n//     };\n\n//     const verifyUser = (id) => {\n//         if (!id) {\n//             alert('User ID is missing.');\n//             return;\n//         }\n\n//         fetch(`http://localhost:3002/Doctors/verify/${id}`, {\n//             method: 'PATCH',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//         })\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error(`HTTP error! status: ${response.status}`);\n//             }\n//             return response.json();\n//         })\n//         .then(() => {\n//             alert('User verified successfully');\n//             fetchUsers();  // Refresh the users list\n//         })\n//         .catch(error => {\n//             console.error('Error verifying user:', error);\n//             alert(`Failed to verify the user: ${error.message}`);\n//         });\n//     };\n\n//     const deleteUser = (id) => {\n//         if (!id) {\n//             alert('User ID is missing.');\n//             return;\n//         }\n\n//         if (window.confirm(`Are you sure you want to delete this user?`)) {\n//             fetch(`http://localhost:3002/Doctors/delete/${id}`, {\n//                 method: 'DELETE',\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 alert(data.message || \"User deleted successfully\");\n//                 fetchUsers();  // Optionally update all data or modify locally\n//             })\n//             .catch(error => {\n//                 console.error('Error:', error);\n//                 alert('Failed to delete the user.');\n//             });\n//         }\n//     };\n\n//     return (\n//         <div className=\"user-management-container\">\n//             <Navbar />\n//             <div className=\"user-table-container\">\n//                 <table className=\"user-table\">\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Email</th>\n//                             <th>Role</th>\n//                             <th>Registered ID</th>\n//                             <th>Working Hospitals</th>\n//                             <th>Age</th>\n//                             <th>Contact No</th>\n//                             <th>Bio</th>\n//                             <th>Profile Image</th>\n//                             <th>Signature Image</th>\n//                             <th>Actions</th>\n//                             <th>Verification</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {users.map(user => (\n//                             <tr key={user._id}>\n//                                 <td>{user.userName}</td>\n//                                 <td>{user.email}</td>\n//                                 <td>{user.role}</td>\n//                                 <td>{user.registeredId}</td>\n//                                 <td>{user.workingHospitals}</td>\n//                                 <td>{user.age}</td>\n//                                 <td>{user.contactNo}</td>\n//                                 <td>{user.bio}</td>\n//                                 <td>\n//                                     <img src={user.profileImage} alt=\"Profile\" style={{ width: \"50px\", height: \"50px\" }} />\n//                                 </td>\n//                                 <td>\n//                                     <img src={user.signatureImage} alt=\"Profile\" style={{ width: \"50px\", height: \"50px\" }} />\n//                                 </td>\n//                                 <td>\n//                                     <button onClick={() => alert('Edit functionality not implemented')}>Edit</button>\n//                                     <button onClick={() => deleteUser(user._id)}>Delete</button>\n//                                 </td>\n//                                 <td>\n//                                     {user.isVerified ? 'Verified' : <button onClick={() => verifyUser(user._id)}>Verify</button>}\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default UserTable;","map":{"version":3,"names":[],"sources":["/home/janujah/F-Pro_Doc/client/src/Admin/Doctoradmin.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import Navbar from '../Components/nav-admin';\n\n// function UserTable() {\n//     const [users, setUsers] = useState([]);\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     const fetchUsers = () => {\n//         fetch('http://localhost:3002/Doctors/view')\n//             .then(response => response.json())\n//             .then(data => {\n//                 setUsers(data);\n//             })\n//             .catch(error => {\n//                 console.error('Failed to fetch users:', error);\n//                 alert('Failed to load users.');\n//             });\n//     };\n\n//     const verifyUser = (id) => {\n//         if (!id) {\n//             alert('User ID is missing.');\n//             return;\n//         }\n    \n//         fetch(`http://localhost:3002/Doctors/verify/${id}`, {\n//             method: 'PATCH',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//         })\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error(`HTTP error! status: ${response.status}`);\n//             }\n//             return response.json();\n//         })\n//         .then(() => {\n//             alert('User verified successfully');\n//             fetchUsers();  // Refresh the users list\n//         })\n//         .catch(error => {\n//             console.error('Error verifying user:', error);\n//             alert(`Failed to verify the user: ${error.message}`);\n//         });\n//     };\n\n//     const deleteUser = (id) => {\n//         if (!id) {\n//             alert('User ID is missing.');\n//             return;\n//         }\n\n//         if (window.confirm(`Are you sure you want to delete this user?`)) {\n//             fetch(`http://localhost:3002/Doctors/delete/${id}`, {\n//                 method: 'DELETE',\n//             })\n//             .then(response => {\n//                 if (!response.ok) {\n//                     throw new Error('Network response was not ok');\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 alert(data.message || \"User deleted successfully\");\n//                 fetchUsers();  // Optionally update all data or modify locally\n//             })\n//             .catch(error => {\n//                 console.error('Error:', error);\n//                 alert('Failed to delete the user.');\n//             });\n//         }\n//     };\n\n//     return (\n//         <div className=\"user-management-container\">\n//             <Navbar />\n//             <div className=\"user-table-container\">\n//                 <table className=\"user-table\">\n//                     <thead>\n//                         <tr>\n//                             <th>Name</th>\n//                             <th>Email</th>\n//                             <th>Role</th>\n//                             <th>Registered ID</th>\n//                             <th>Working Hospitals</th>\n//                             <th>Age</th>\n//                             <th>Contact No</th>\n//                             <th>Bio</th>\n//                             <th>Profile Image</th>\n//                             <th>Signature Image</th>\n//                             <th>Actions</th>\n//                             <th>Verification</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {users.map(user => (\n//                             <tr key={user._id}>\n//                                 <td>{user.userName}</td>\n//                                 <td>{user.email}</td>\n//                                 <td>{user.role}</td>\n//                                 <td>{user.registeredId}</td>\n//                                 <td>{user.workingHospitals}</td>\n//                                 <td>{user.age}</td>\n//                                 <td>{user.contactNo}</td>\n//                                 <td>{user.bio}</td>\n//                                 <td>\n//                                     <img src={user.profileImage} alt=\"Profile\" style={{ width: \"50px\", height: \"50px\" }} />\n//                                 </td>\n//                                 <td>\n//                                     <img src={user.signatureImage} alt=\"Profile\" style={{ width: \"50px\", height: \"50px\" }} />\n//                                 </td>\n//                                 <td>\n//                                     <button onClick={() => alert('Edit functionality not implemented')}>Edit</button>\n//                                     <button onClick={() => deleteUser(user._id)}>Delete</button>\n//                                 </td>\n//                                 <td>\n//                                     {user.isVerified ? 'Verified' : <button onClick={() => verifyUser(user._id)}>Verify</button>}\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default UserTable;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}